[{"/home/ubuntu/HomeAuto/public/home_auto/src/index.js":"1","/home/ubuntu/HomeAuto/public/home_auto/src/App.js":"2","/home/ubuntu/HomeAuto/public/home_auto/src/reportWebVitals.js":"3","/home/ubuntu/HomeAuto/public/home_auto/src/components/Footer/Footer.js":"4","/home/ubuntu/HomeAuto/public/home_auto/src/components/Header/Header.js":"5","/home/ubuntu/HomeAuto/public/home_auto/src/components/pages/DeskController/DeskController.js":"6","/home/ubuntu/HomeAuto/public/home_auto/src/modules/features.js":"7","/home/ubuntu/HomeAuto/public/home_auto/src/config/gateway.js":"8","/home/ubuntu/HomeAuto/public/home_auto/src/config/endpoints.js":"9"},{"size":500,"mtime":1635163474394,"results":"10","hashOfConfig":"11"},{"size":594,"mtime":1635163474390,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1635163474394,"results":"13","hashOfConfig":"11"},{"size":238,"mtime":1635163474390,"results":"14","hashOfConfig":"11"},{"size":178,"mtime":1635706713209,"results":"15","hashOfConfig":"11"},{"size":2625,"mtime":1635706713209,"results":"16","hashOfConfig":"11"},{"size":1129,"mtime":1635163474394,"results":"17","hashOfConfig":"11"},{"size":69,"mtime":1635163474394,"results":"18","hashOfConfig":"11"},{"size":103,"mtime":1635163474394,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12e3pkz",{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ubuntu/HomeAuto/public/home_auto/src/index.js",[],"/home/ubuntu/HomeAuto/public/home_auto/src/App.js",[],"/home/ubuntu/HomeAuto/public/home_auto/src/reportWebVitals.js",[],"/home/ubuntu/HomeAuto/public/home_auto/src/components/Footer/Footer.js",[],"/home/ubuntu/HomeAuto/public/home_auto/src/components/Header/Header.js",[],"/home/ubuntu/HomeAuto/public/home_auto/src/components/pages/DeskController/DeskController.js",["40","41"],"import React, { useEffect, useState } from 'react';\nimport './DeskController.css';\nimport { switchDevice, capturePic } from '../../../modules/features';\n\n// import { io } from \"socket.io-client\";\n// const socket = io(\"ws://192.168.1.21:8080/\");\n\nconst devices = [\n    { id: 1, name: 'Light' },\n    { id: 2, name: 'Fan' },\n    { id: 3, name: 'Monitor' },\n    { id: 4, name: 'RGB strip' },\n]\n\nexport default function DeskController() {\n\n    const [showLoader, setShowLoader] = useState(true);\n    const [renderer, setRenderer] = useState(true);\n\n    const refreshImage = function () {\n        setInterval(() => {\n            var timestamp = new Date().getTime();\n            var image = document.getElementById(\"c1_view\");\n            image.src = \"http://192.168.1.21:8080/deskcam.png?t=\" + timestamp;\n        }, 500)\n    }\n\n    useEffect(() => {\n        // capturePic(1, setShowLoader);\n\n        setShowLoader(false);\n        refreshImage();\n\n        // socket.on(\"connect\", () => {\n        //     console.log(socket); // x8WIv7-mJelg7on_ALbx\n        // });\n\n        // socket.on(\"image\", (data) => {\n        //       console.log('data from socket',data)\n        //     //   document.querySelector('#c1_view').src=`data:image/png;base64, ${data}`;\n        //     setRenderer(new Date());\n        // });\n\n\n        // socket.on(\"disconnect\", () => {\n        //     console.log(socket); // undefined\n        // });\n\n    }, [])\n\n    const renderDeviceList = () => {\n        return devices.map((d, i) => {\n            return (\n                <div key={i} className=\"switch_row\">\n                    <div>{d.name}</div>\n                    <div>\n                        <button onClick={() => switchDevice(1, 1, setShowLoader)}>ON</button>\n                        <button onClick={() => switchDevice(0, 1, setShowLoader)}>OFF</button>\n                    </div>\n                </div>\n            )\n        })\n    }\n\n    return (\n        <React.Fragment>\n            {showLoader &&\n                <div className=\"loader\">\n                    <h3>Loading ...</h3>\n                </div>\n            }\n            <h3 className=\"feature_heading\">Desk Controls</h3>\n            {renderDeviceList()}\n            <h3 className=\"feature_heading\">Straight from the desk</h3>\n\n                {\n                    renderer &&\n                    <img className=\"camera_view\" id=\"c1_view\" src=\"http://192.168.1.21:8080/logo1.png\" alt=\"\" />\n                }\n                {/* <div>\n                    <button onClick={() => capturePic(1,setShowLoader)}>Capture now</button>\n                </div> */}\n        </React.Fragment>\n    )\n}\n","/home/ubuntu/HomeAuto/public/home_auto/src/modules/features.js",["42"],"import GATEWAY from '../config/gateway.js';\nimport {CHANGE_STATE_ENDPOINT, CAPTURE_PIC_ENDPOINT} from '../config/endpoints.js';\n \nexport function showLoader(val){\n    document.querySelector('#loader').style.display = val ? 'flex' : 'none'\n}   \n\nexport function switchDevice(val, deviceId,setShowLoader) {\n\n    setShowLoader(true);\n    \n\tfetch(`${GATEWAY}${CHANGE_STATE_ENDPOINT}`,\n\t\t{\n\t\t\tmethod: 'POST', body: JSON.stringify({ val, deviceId }),\n\t\t\theaders: { 'Content-Type': 'application/json' }\n\t\t\t\n\t\t\t})\n\t\t.then(res=>{setShowLoader(false); return res.json()}).then(data => {console.log(data);alert(`success - device 1 turned ${val==1?'on':'off'}`)}).catch(()=>setShowLoader(false));\n\n}\n\nexport function capturePic(cameraId,setShowLoader) {\n\n    setShowLoader(true);\n\n\tfetch(`${GATEWAY}${CAPTURE_PIC_ENDPOINT}`,\n\t\t{\n\t\t\tmethod: 'POST', body: JSON.stringify({ cameraId }),\n\t\t\theaders: { 'Content-Type': 'application/json' }\n\t\t\t}).then(res=>{setShowLoader(false); return res.json()}).then(data => {console.log(data.body); \n\t\t\t\t// document.querySelector('#c1_view').src=`${data.imageData}`\n\t\t\t}).catch(()=>setShowLoader(false));\n\n}\n","/home/ubuntu/HomeAuto/public/home_auto/src/config/gateway.js",[],"/home/ubuntu/HomeAuto/public/home_auto/src/config/endpoints.js",[],{"ruleId":"43","severity":1,"message":"44","line":3,"column":24,"nodeType":"45","messageId":"46","endLine":3,"endColumn":34},{"ruleId":"43","severity":1,"message":"47","line":18,"column":22,"nodeType":"45","messageId":"46","endLine":18,"endColumn":33},{"ruleId":"48","severity":1,"message":"49","line":18,"column":127,"nodeType":"50","messageId":"51","endLine":18,"endColumn":129},"no-unused-vars","'capturePic' is defined but never used.","Identifier","unusedVar","'setRenderer' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]